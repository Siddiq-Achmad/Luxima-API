{
    "openapi": "3.0.0",
    "info": {
        "title": "LUXIMA API Documentation",
        "description": "This is the API documentation for the Luxima project. It covers all endpoints related to authentication and other functionalities.",
        "contact": {
            "email": "admin@luxima.id"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://api.luxima.id/api",
            "description": "LUXIMA API Server"
        }
    ],
    "paths": {
        "/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "3a8b52fca2b4ff82bb3c3e2384ba864e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@luxima.id"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345678"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345678"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "operationId": "4a0653990bae153573fca45c02b86632",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@luxima.id"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345678"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1Q..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "operationId": "615f1ac2443597e75609845bf0366ab4",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/profile": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get user profile",
                "description": "Retrieve user profile information.",
                "operationId": "getProfile",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "johndoe@luxima.id"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-09-03T12:34:56Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-09-03T12:34:56Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/refresh-token": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh authentication token",
                "operationId": "c1f678d65d7f2913820cf94546267820",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1Q..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/blog": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "summary": "Get all Blog",
                "description": "Retrieve a list of all Blog.",
                "operationId": "indexBlog",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Blog"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/list-blog": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "summary": "Get Blog for authenticated user",
                "description": "Retrieve all blog posts for the currently authenticated user.",
                "operationId": "listBlogForAuthUser",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Blog"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/blog-details/{blog_id}": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "summary": "Get a single blog for authenticated user",
                "description": "Retrieve the details of a specific blog post for the currently authenticated user.",
                "operationId": "getSingleBlogForAuthUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the blog",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Blog"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Blog not found"
                    }
                }
            }
        },
        "/blog/{slug}": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "summary": "Get blog by slug",
                "description": "Retrieve the details of a specific blog post by its slug.",
                "operationId": "getBlogBySlug",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the blog",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Blog"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Blog not found"
                    }
                }
            }
        },
        "/Blog/{id}": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "summary": "Get a blog by ID",
                "description": "Retrieve the details of a specific blog post.",
                "operationId": "showBlog",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the blog",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Blog"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Blog not found"
                    }
                }
            }
        },
        "/Blog": {
            "post": {
                "tags": [
                    "Blog"
                ],
                "summary": "Create a new blog",
                "description": "Create a new blog post.",
                "operationId": "storeBlog",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BlogCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Blog created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Blog"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/blog/{id}": {
            "put": {
                "tags": [
                    "Blog"
                ],
                "summary": "Update a blog",
                "description": "Update the details of a specific blog post.",
                "operationId": "updateBlog",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the blog",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BlogUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Blog updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Blog"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Blog not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Blog"
                ],
                "summary": "Delete a blog",
                "description": "Delete a specific blog post.",
                "operationId": "destroyBlog",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the blog",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Blog deleted successfully"
                    },
                    "404": {
                        "description": "Blog not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/bookings": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Show all Bookings",
                "description": "Retrieve a list of all Bookings.",
                "operationId": "2a8518bafccd7b95f3cb325c26f32963",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved Bookings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Booking"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, token tidak valid"
                    }
                }
            }
        },
        "/booking/{id}": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Show detail booking by id",
                "description": "Retrieve detail data booking by id.",
                "operationId": "0c99932638468b76e93434ad208239e6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique booking id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data Booking Detail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Booking"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found"
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Show all Categories",
                "description": "Retrieve a list of all Categories.",
                "operationId": "11dc7bee7f8ad5b8d0a6a33493c5ea92",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved Categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, token tidak valid"
                    }
                }
            }
        },
        "/category/{slug}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Show detail category by slug",
                "description": "Retrieve detail data category by slug.",
                "operationId": "22ac95e86319ac642d72e9ed0fe15a56",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Unique category slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data Category Detail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/locations": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Show all Locations",
                "description": "Retrieve a list of all Locations.",
                "operationId": "2be5659d02ad51e62526d661084c6d41",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved Locations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Location"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, token tidak valid"
                    }
                }
            }
        },
        "/location/{slug}": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Show detail location by slug",
                "description": "Retrieve detail data location by slug.",
                "operationId": "c9d5f519cca98fa219c78b5e32f099dd",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Unique location slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data Vendor Detail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found"
                    }
                }
            }
        },
        "/vendors": {
            "get": {
                "tags": [
                    "Vendor"
                ],
                "summary": "Show all vendors",
                "description": "Retrieve a list of all vendors.",
                "operationId": "1d0aa57c9db3be1d9403f33a7c041af2",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved vendors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Vendor"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, token tidak valid"
                    }
                }
            }
        },
        "/search": {
            "get": {
                "tags": [
                    "Vendor"
                ],
                "summary": "Search for vendors based on keyword, category, and location",
                "description": "Search for vendors based on a keyword, category, and location.",
                "operationId": "bb50fd6bf54b7f73e6c0dcee3a58f54b",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search keyword",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Slug by category",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Lokasi vendor",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data Result Search",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Vendor"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters"
                    }
                }
            }
        },
        "/vendor/{slug}": {
            "get": {
                "tags": [
                    "Vendor"
                ],
                "summary": "Show detail vendor by slug",
                "description": "Retrieve detail data vendor by slug.",
                "operationId": "3b0134ad8ea02ab1464466cac22c46bc",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Unique vendor slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data Vendor Detail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vendor"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vendor not found"
                    }
                }
            }
        },
        "/{slug}": {
            "get": {
                "tags": [
                    "Vendor"
                ],
                "summary": "Get Data Vendor By Category",
                "description": "Retrieve a list of vendors by category.",
                "operationId": "9918563d18c6ed38945830c7f4755043",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Unique Slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vendor dengan kategori ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Vendor"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vendor tidak ditemukan"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "title": "User",
                "description": "User model",
                "required": [
                    "id",
                    "name",
                    "email"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@luxima.id"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "12345678"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "format": "password",
                        "example": "12345678"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-09-03T12:34:56Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-09-03T12:34:56Z"
                    }
                },
                "type": "object"
            },
            "Blog": {
                "title": "Blog",
                "description": "Blog model",
                "required": [
                    "id",
                    "title",
                    "content",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Blog Title"
                    },
                    "content": {
                        "type": "string",
                        "example": "Blog content here..."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-09-03T12:34:56Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-09-03T12:34:56Z"
                    }
                },
                "type": "object"
            },
            "BlogCreateRequest": {
                "title": "Blog Create Request",
                "description": "Request body for creating a blog",
                "required": [
                    "title",
                    "content"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "Blog Title"
                    },
                    "content": {
                        "type": "string",
                        "example": "Blog content here..."
                    }
                },
                "type": "object"
            },
            "BlogUpdateRequest": {
                "title": "Blog Update Request",
                "description": "Request body for updating a blog",
                "required": [
                    "title",
                    "content"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "Updated Blog Title"
                    },
                    "content": {
                        "type": "string",
                        "example": "Updated blog content here..."
                    }
                },
                "type": "object"
            },
            "Booking": {
                "title": "Booking",
                "required": [
                    "id",
                    "name",
                    "slug",
                    "location"
                ],
                "properties": {
                    "id": {
                        "description": " ID Booking",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "User ID Booking",
                        "type": "integer"
                    },
                    "vendor_id": {
                        "description": "Vendor ID Booking",
                        "type": "integer"
                    },
                    "service_id": {
                        "description": "Service ID Booking",
                        "type": "integer"
                    },
                    "event_id": {
                        "description": "Event ID Booking",
                        "type": "integer"
                    },
                    "location_id": {
                        "description": "Location ID Booking",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Booking name",
                        "type": "string"
                    },
                    "total_amount": {
                        "description": "Booking total amount",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Booking created at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Booking updated at",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Categories",
                "required": [
                    "name",
                    "slug",
                    "description",
                    "image"
                ],
                "properties": {
                    "name": {
                        "description": "Category name",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Unique slug for category",
                        "type": "string"
                    },
                    "description": {
                        "description": "Category description",
                        "type": "string"
                    },
                    "image": {
                        "description": "Category image",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Location": {
                "title": "Location",
                "required": [
                    "id",
                    "name",
                    "slug",
                    "location"
                ],
                "properties": {
                    "id": {
                        "description": " ID vendor",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Location name",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Unique slug for vendor",
                        "type": "string"
                    },
                    "description": {
                        "description": "Location description",
                        "type": "string"
                    },
                    "location": {
                        "description": "Location location",
                        "type": "string"
                    },
                    "category": {
                        "description": "Location category",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Location created at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Location updated at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "Location deleted at",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Vendor": {
                "title": "Vendor",
                "required": [
                    "id",
                    "name",
                    "slug",
                    "location"
                ],
                "properties": {
                    "id": {
                        "description": " ID vendor",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Vendor name",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Unique slug for vendor",
                        "type": "string"
                    },
                    "description": {
                        "description": "Vendor description",
                        "type": "string"
                    },
                    "location": {
                        "description": "Vendor location",
                        "type": "string"
                    },
                    "category": {
                        "description": "Vendor category",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Vendor created at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Vendor updated at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "Vendor deleted at",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Blog",
            "description": "API Endpoints for Blog"
        },
        {
            "name": "Booking",
            "description": "API Endpoints for Bookings"
        },
        {
            "name": "Category",
            "description": "API Endpoints for Categories"
        },
        {
            "name": "Location",
            "description": "API Endpoints for Locations"
        },
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Profile",
            "description": "Profile"
        },
        {
            "name": "Vendor",
            "description": "Vendor"
        }
    ]
}